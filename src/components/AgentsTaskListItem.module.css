.container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    max-width: 1024px;
    padding: var(--base-size-12) var(--base-size-20) var(--base-size-12)
        var(--base-size-16);
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

.container:hover {
    background-color: var(--bgColor-muted);
}

.left {
    display: flex;
    gap: var(--base-size-8);
    width: 100%;
}

.leftLeading {
    margin-top: 3px;
    width: var(--base-size-16);
    height: var(--base-size-16);
    display: flex;
    align-items: center;
    justify-self: center;
}

.leftText {
    display: flex;
    flex-direction: column;
    gap: var(--base-size-2);
}
.leftTextTitle {
    font-weight: var(--base-text-weight-semibold);
    font-size: var(--text-body-size-medium);
    color: var(--fgColor-default);
}
.leftTextDescription {
    font-weight: var(--base-text-weight-normal);
    font-size: 12px;
    color: var(--fgColor-muted);
}

.right {
    font-size: var(--text-body-size-small);
    color: var(--fgColor-muted);
}

svg[aria-label='icon-draft'] {
    fill: var(--fgColor-muted);
}
svg[aria-label='icon-merged'] {
    fill: var(--fgColor-done);
}
svg[aria-label='icon-in-progress'] {
    animation: anim-rotate 2s linear infinite;
}

@keyframes anim-rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

svg[aria-label='icon-completed'] {
    fill: var(--fgColor-success);
}
svg[aria-label='icon-pr'] {
    fill: var(--fgColor-muted);
}
/* AgentsTaskListItem.module.css */
.HeadingContainer {
    padding-bottom: var(--base-size-8);
    display: flex;
    justify-content: space-between;
    align-items: center;
    min-height: var(--control-small-size);
}

.Heading {
    color: var(--fgColor-muted);
    font-size: var(--text-body-size-medium);
    font-weight: var(--base-text-weight-normal);
    display: flex;
    align-items: center;
    gap: var(--base-size-6);
}

.HeadingIcon {
    vertical-align: text-top;
}

.List {
    background-color: var(--overlay-bgColor);
    border: var(--borderWidth-thin) solid var(--borderColor-default);
    border-radius: var(--borderRadius-default);
    margin-bottom: var(--base-size-16);
}

.EmptyList {
    background-color: var(--overlay-bgColor);
    border: var(--borderWidth-thin) solid var(--borderColor-default);
    border-radius: var(--borderRadius-default);
    margin-bottom: var(--base-size-16);
    text-align: center;
    padding: var(--base-size-16);
}

.SuggestedActionLabel {
    background-color: var(--bgColor-neutral-muted);
    border-color: var(--borderColor-transparent);
}

.Muted {
    color: var(--color-muted);
}

.Dialog {
    overflow: auto;
}

.TextArea {
    margin-top: 2;
    margin-bottom: 2;
}

.FormControl {
    padding-top: 3;
}

.SuccessIcon {
    color: var(--fgColor-success);
}

.FailureIcon {
    color: var(--fgColor-danger);
}

.ListItemOverride {
    padding-top: var(--base-size-4);
    padding-bottom: var(--base-size-4);
    row-gap: 0;
    /* // this is to override a spacing element on the listItem.
  // If this goes beyond MVP we'll probably want to pass a new className prop to ListItem/MainContent.tsx */
    :has(> .description) {
        padding-bottom: var(--base-size-4);
        padding-right: var(--base-size-4);
    }
}

.titleContainerOverride {
    padding-top: var(--base-size-4);
    padding-right: var(--base-size-12);
    display: flex;
}

.titleContainerOverride.pullRequest {
    padding-bottom: var(--base-size-4);
}

.titleOverride {
    padding-bottom: 0;
    padding-top: 0;
    font-size: var(--text-body-size-medium);
    white-space: nowrap;
    text-overflow: ellipsis;
}

.timeOverride {
    font-size: var(--text-body-size-small);
}

.ListItemMainContentOverride {
    display: inline;
    padding-bottom: var(--base-size-4);
}

.commentCount {
    display: flex;
    align-items: center;
    gap: var(--base-size-4);
}

.ReplyIcon {
    display: inline;
    color: var(--fgColor-muted);
    transform: rotate(180deg);
    margin-right: var(--base-size-2);
}

.description {
    display: inline;
}

.leadingVisualOverride {
    margin-top: var(--base-size-6);
}

.spinnerContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    height: var(--base-size-32);
}
